package grammer;

// 사이트 https://regexper.com/#hello%7Chi
// 사이트2 

public class Regex {

	public static void main(String[] args) {
		// ^ : 시작지점, $ : 종료지점 두개는 꼭 필요 생략가능하다 이클립스에서는
		// [] 대괄호로 감싸면 그 안에 하나는 꼭 나와야한다. 대괄호에 아무리 많아도 하나이다.
		// (19|20) 문자열 "19"또는 "20"이 있어야 한다 
		// 범위는 [a-c] -로 표현한다. a부터 c까지라는 표현이다.
		// 숫자한자리 [0-9]이고 만약 5자리수라면 [0-9]{5}
		// heelo|hi 두 문자열중하나
		// [0-9]{4} 연도 정규표현식 숫자가 네개가 나와야한다
		// a{5} a가 다섯번 나온다.
		// a{5,} a가 다섯번 이상나온다.
		// [0-9]{3,5} 0~9의 숫자가 3번이상 5번이하로 나와야한다.  
		// ^(?=.*[a-z])(뒤의식) 뒤의 식에 a~z가 있는 지 조사해라 긍정탐색 
		// ^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$])[A-Za-z!@#$0-9]{8,16}$
		// 비밀번호에 a-z, A-Z, !@#$가 하나는 꼭 나와야한다. 
		
		// ^(19|20)\\d\\d-((((0[13578])|(1[02]))-(([012]\\d)|(3[01])))|(((0[2469])|(11))-(([012]\\d)|(30))))$
		// 날짜의 맞고 틀림 측정 월별 최대일 수 구분.
		// 1990-11-30 yes 1999-02-31 no  
		
		// ^01[06789]-[0123456789][0123456789][0123456789][0123456789]-[0123456789][0123456789][0123456789][0123456789]$
		// 휴대폰 번호 구분
		String num = "010-1234-5678";
		String regex = "^01[06789]-[0123456789][0123456789][0123456789][0123456789]-[0123456789][0123456789][0123456789][0123456789]$";
		if(num.matches(regex)) {
			System.out.println("휴대폰 전화가 맞아요");
		}
		else
		{
			System.out.println("휴대폰 전화가 아니에요!");
		}
		// 010-1234-5678 yes 110-1234-5678 no

		// (.*?)[1](.*?) 문자열에 앞뒤상관없이 1이 존재함녀 된다. 
		
		//
		//(?=.*[a-z])(뒤의식) 뒤의 식에 a~z가 있는 지 조사해라 긍정탐색
		
	}

}
